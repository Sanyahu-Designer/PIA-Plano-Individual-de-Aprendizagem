# Generated by Django 5.1.2 on 2024-12-11 19:41

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('profissionais_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModalidadeEnsino',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('idade_minima', models.IntegerField(blank=True, null=True, verbose_name='Idade Mínima')),
                ('idade_maxima', models.IntegerField(blank=True, null=True, verbose_name='Idade Máxima')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Modalidade de Ensino',
                'verbose_name_plural': 'Modalidades de Ensino',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ProgramaEducacional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('tipo', models.CharField(choices=[('inclusao', 'Inclusão'), ('reforco', 'Reforço Escolar Adaptado'), ('comportamental', 'Intervenção Comportamental'), ('metodologias', 'Metodologias Pedagógicas Adaptadas')], max_length=20, verbose_name='Tipo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Programa Educacional',
                'verbose_name_plural': 'Programas Educacionais',
            },
        ),
        migrations.CreateModel(
            name='Recurso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('tipo', models.CharField(choices=[('sensorial', 'Salas Sensoriais'), ('tecnologia', 'Tecnologias Assistivas'), ('material', 'Materiais Adaptados'), ('acessibilidade', 'Dispositivos de Acessibilidade'), ('fisica', 'Acessibilidade Física')], max_length=20, verbose_name='Tipo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Recurso',
                'verbose_name_plural': 'Recursos',
            },
        ),
        migrations.CreateModel(
            name='Escola',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('codigo_inep', models.CharField(max_length=8, unique=True, validators=[django.core.validators.RegexValidator(message='O código INEP deve conter exatamente 8 dígitos numéricos.', regex='^\\d{8}$')], verbose_name='Código INEP')),
                ('telefone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='O telefone deve estar no formato (XX) XXXXX-XXXX', regex='^\\(\\d{2}\\) \\d{5}-\\d{4}$')], verbose_name='Telefone')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('diretor', models.CharField(max_length=100, verbose_name='Diretor(a)')),
                ('cep', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='O CEP deve estar no formato XXXXX-XXX', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('endereco', models.CharField(max_length=200, verbose_name='Endereço')),
                ('numero', models.CharField(max_length=10, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, verbose_name='Estado')),
                ('tipo', models.CharField(choices=[('publica', 'Pública'), ('privada', 'Privada'), ('especial', 'Escola Especial')], max_length=10, verbose_name='Tipo')),
                ('turnos', models.CharField(choices=[('manha', 'Manhã'), ('tarde', 'Tarde'), ('diurno', 'Diurno'), ('noite', 'Noturno'), ('integral', 'Integral')], max_length=10, verbose_name='Turnos')),
                ('capacidade_atendimento', models.IntegerField(verbose_name='Capacidade de Atendimento')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('profissionais_educacao', models.ManyToManyField(blank=True, limit_choices_to={'profissao__in': ['educador_especial', 'neuropsicopedagogo', 'pedagogo', 'psicopedagogo', 'assistente_social']}, related_name='escolas_educacao', to='profissionais_app.profissional', verbose_name='Profissionais da Educação')),
                ('profissionais_saude', models.ManyToManyField(blank=True, limit_choices_to={'profissao__in': ['fisioterapeuta', 'fonoaudiologo', 'musicoterapeuta', 'neurologista', 'neuropsicólogo', 'psicologo', 'psiquiatra', 'terapeuta']}, related_name='escolas_saude', to='profissionais_app.profissional', verbose_name='Profissionais da Saúde')),
                ('modalidades', models.ManyToManyField(blank=True, to='escola.modalidadeensino', verbose_name='Modalidades de Ensino')),
                ('programas_educacionais', models.ManyToManyField(blank=True, to='escola.programaeducacional', verbose_name='Programas Educacionais')),
                ('recursos_disponiveis', models.ManyToManyField(blank=True, to='escola.recurso', verbose_name='Recursos Disponíveis')),
            ],
            options={
                'verbose_name': 'Escola',
                'verbose_name_plural': 'Escolas',
                'ordering': ['nome'],
            },
        ),
    ]
