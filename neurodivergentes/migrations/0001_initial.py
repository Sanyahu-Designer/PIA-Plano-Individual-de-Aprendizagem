# Generated by Django 5.1.2 on 2025-02-12 15:52

import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
import neurodivergentes.models.base
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('escola', '0001_initial'),
        ('profissionais_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaNeurodivergente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem de Exibição')),
            ],
            options={
                'verbose_name': 'Categoria de Neurodivergência',
                'verbose_name_plural': 'Categorias de Neurodivergência',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='MetaHabilidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Meta/Habilidade',
                'verbose_name_plural': 'Metas/Habilidades',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Neurodivergente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primeiro_nome', models.CharField(max_length=50, verbose_name='Primeiro Nome')),
                ('ultimo_nome', models.CharField(max_length=50, verbose_name='Último Nome')),
                ('data_nascimento', models.DateField(validators=[neurodivergentes.models.base.validate_future_date], verbose_name='Data de Nascimento')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino')], max_length=1, verbose_name='Gênero')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator(message='CPF inválido. Use o formato XXX.XXX.XXX-XX', regex='^\\d{3}\\.\\d{3}\\.\\d{3}-\\d{2}$')], verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, null=True, verbose_name='RG')),
                ('estado_nascimento', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, verbose_name='Estado de Nascimento')),
                ('cidade_nascimento', models.CharField(max_length=100, verbose_name='Cidade de Nascimento')),
                ('cep', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='CEP inválido. Use o formato XXXXX-XXX', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço')),
                ('numero', models.CharField(max_length=10, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(choices=[('AC', 'Acre'), ('AL', 'Alagoas'), ('AP', 'Amapá'), ('AM', 'Amazonas'), ('BA', 'Bahia'), ('CE', 'Ceará'), ('DF', 'Distrito Federal'), ('ES', 'Espírito Santo'), ('GO', 'Goiás'), ('MA', 'Maranhão'), ('MT', 'Mato Grosso'), ('MS', 'Mato Grosso do Sul'), ('MG', 'Minas Gerais'), ('PA', 'Pará'), ('PB', 'Paraíba'), ('PR', 'Paraná'), ('PE', 'Pernambuco'), ('PI', 'Piauí'), ('RJ', 'Rio de Janeiro'), ('RN', 'Rio Grande do Norte'), ('RS', 'Rio Grande do Sul'), ('RO', 'Rondônia'), ('RR', 'Roraima'), ('SC', 'Santa Catarina'), ('SP', 'São Paulo'), ('SE', 'Sergipe'), ('TO', 'Tocantins')], max_length=2, verbose_name='Estado')),
                ('celular', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Formato inválido. Use (XX) XXXXX-XXXX', regex='^\\(\\d{2}\\) \\d{5}-\\d{4}$')], verbose_name='Celular/WhatsApp')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-mail')),
                ('foto_perfil', models.ImageField(blank=True, null=True, upload_to='neurodivergentes/fotos/', verbose_name='Foto de Perfil')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Aluno/Paciente',
                'verbose_name_plural': '.Alunos/Pacientes',
                'ordering': ['primeiro_nome', 'ultimo_nome'],
            },
        ),
        migrations.CreateModel(
            name='SeriesCursadas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(choices=[('bercario1', 'Berçário I'), ('bercario2', 'Berçário II'), ('maternal', 'Maternal'), ('jardim', 'Jardim'), ('pre1', 'Pré I'), ('pre2', 'Pré II'), ('1ano', '1º Ano'), ('2ano', '2º Ano'), ('3ano', '3º Ano'), ('4ano', '4º Ano'), ('5ano', '5º Ano'), ('6ano', '6º Ano'), ('7ano', '7º Ano'), ('8ano', '8º Ano'), ('9ano', '9º Ano')], max_length=10, unique=True, verbose_name='Série')),
                ('categoria', models.CharField(choices=[('EDUCAÇÃO INFANTIL', 'Educação Infantil'), ('ENSINO FUNDAMENTAL I', 'Ensino Fundamental I'), ('ENSINO FUNDAMENTAL II', 'Ensino Fundamental II')], max_length=50, verbose_name='Categoria')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem de exibição')),
            ],
            options={
                'verbose_name': 'Série Cursada',
                'verbose_name_plural': 'Séries Cursadas',
                'ordering': ['ordem', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='Anamnese',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_parto', models.CharField(choices=[('normal', 'Normal'), ('cesarea', 'Cesárea')], max_length=10, verbose_name='Tipo de Parto')),
                ('tempo_gestacao', models.IntegerField(validators=[django.core.validators.MinValueValidator(20), django.core.validators.MaxValueValidator(45)], verbose_name='Tempo de Gestação (semanas)')),
                ('prematuridade', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Prematuridade')),
                ('tempo_prematuridade', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)], verbose_name='Tempo de Prematuridade (semanas)')),
                ('observacoes_parto', models.TextField(blank=True, verbose_name='Observações sobre o Parto')),
                ('status_pais', models.CharField(choices=[('casados', 'Casados'), ('separados', 'Separados'), ('outros', 'Outros')], max_length=10, verbose_name='Status dos Pais')),
                ('beneficios_sociais', models.CharField(blank=True, max_length=100, verbose_name='Benefícios Sociais')),
                ('convenio_medico', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Possui Convênio Médico')),
                ('nome_convenio', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome do Convênio')),
                ('queixa_inicial', models.TextField(verbose_name='Queixa Inicial')),
                ('historia_vida', models.TextField(verbose_name='História de Vida')),
                ('comportamento_familiar', models.TextField(blank=True, verbose_name='Comportamento no Ambiente Familiar')),
                ('comportamento_social', models.TextField(blank=True, verbose_name='Comportamento no Ambiente Social e Escolar')),
                ('autonomia', models.TextField(verbose_name='Autonomia')),
                ('comunicacao', models.TextField(verbose_name='Comunicação')),
                ('restricoes_alimentares', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], verbose_name='Possui Restrições Alimentares')),
                ('descricao_restricoes', models.TextField(blank=True, null=True, verbose_name='Descrição das Restrições Alimentares')),
                ('aspectos_cognitivos', models.TextField(verbose_name='Aspectos Cognitivos')),
                ('aspectos_psicomotores', models.TextField(verbose_name='Aspectos Psicomotores')),
                ('aspectos_emocionais', models.TextField(verbose_name='Aspectos Emocionais/Sociais')),
                ('aspectos_sensoriais', models.TextField(verbose_name='Aspectos Sensoriais')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profissional_responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='anamneses_responsavel', to='profissionais_app.profissional', verbose_name='Profissional Responsável')),
                ('neurodivergente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='anamnese', to='neurodivergentes.neurodivergente', verbose_name='Aluno/Paciente')),
            ],
            options={
                'verbose_name': 'Anamnese',
                'verbose_name_plural': 'Anamneses',
            },
        ),
        migrations.CreateModel(
            name='CondicaoNeurodivergente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome da Condição')),
                ('cid_10', models.CharField(max_length=50, verbose_name='CID-10')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='condicoes', to='neurodivergentes.categorianeurodivergente', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Condição Aluno/Paciente',
                'verbose_name_plural': 'Condições Alunos/Pacientes',
                'ordering': ['categoria', 'nome'],
                'unique_together': {('categoria', 'nome')},
            },
        ),
        migrations.CreateModel(
            name='Medicacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome da Medicação')),
                ('dosagem', models.CharField(max_length=50, verbose_name='Dosagem')),
                ('frequencia', models.CharField(max_length=100, verbose_name='Frequência')),
                ('anamnese', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicacoes', to='neurodivergentes.anamnese')),
            ],
            options={
                'verbose_name': 'Medicação',
                'verbose_name_plural': 'Medicações',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Monitoramento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.IntegerField(choices=[(1, 'Janeiro'), (2, 'Fevereiro'), (3, 'Março'), (4, 'Abril'), (5, 'Maio'), (6, 'Junho'), (7, 'Julho'), (8, 'Agosto'), (9, 'Setembro'), (10, 'Outubro'), (11, 'Novembro'), (12, 'Dezembro')], default=2, help_text='Selecione o mês do PEI', verbose_name='Mês')),
                ('ano', models.IntegerField(default=2025, help_text='Selecione o ano do PEI', verbose_name='Ano')),
                ('observacoes', django_ckeditor_5.fields.CKEditor5Field(blank=True, help_text='Descreva o planejamento para esta meta/habilidade', null=True, verbose_name='Planejamento')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pedagogo_responsavel', models.ForeignKey(blank=True, limit_choices_to={'profissao__in': ['assistente_social', 'educador_especial', 'neuropsicopedagogo', 'pedagogo', 'psicopedagogo']}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='monitoramentos', to='profissionais_app.profissional', verbose_name='Profissional Responosável')),
            ],
            options={
                'verbose_name': 'PEI',
                'verbose_name_plural': 'PEI',
                'ordering': ['-ano', '-mes'],
            },
        ),
        migrations.CreateModel(
            name='MonitoramentoMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoramento_metas', to='neurodivergentes.metahabilidade')),
                ('monitoramento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoramento_metas', to='neurodivergentes.monitoramento')),
            ],
            options={
                'db_table': 'neurodivergentes_monitoramento_metas',
                'unique_together': {('monitoramento', 'meta')},
            },
        ),
        migrations.AddField(
            model_name='monitoramento',
            name='metas',
            field=models.ManyToManyField(help_text='Selecione uma ou mais metas/habilidades para este planejamento', through='neurodivergentes.MonitoramentoMeta', to='neurodivergentes.metahabilidade', verbose_name='Metas/Habilidades'),
        ),
        migrations.CreateModel(
            name='Neurodivergencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_diagnostico', models.DateField(blank=True, null=True, verbose_name='Data do Diagnóstico')),
                ('profissional_diagnostico', models.CharField(blank=True, max_length=100, verbose_name='Profissional Responsável')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('laudo_medico', models.FileField(blank=True, null=True, upload_to='neurodivergentes/laudos/', verbose_name='Laudo Médico')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('neurodivergente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='neurodivergencias', to='neurodivergentes.neurodivergente')),
            ],
            options={
                'verbose_name': 'Neurodivergência',
                'verbose_name_plural': 'Neurodivergências',
            },
        ),
        migrations.AddField(
            model_name='monitoramento',
            name='neurodivergente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoramentos', to='neurodivergentes.neurodivergente', verbose_name='Aluno/Paciente'),
        ),
        migrations.CreateModel(
            name='GrupoFamiliar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primeiro_nome', models.CharField(max_length=50, verbose_name='Primeiro Nome')),
                ('ultimo_nome', models.CharField(max_length=50, verbose_name='Último Nome')),
                ('data_nascimento', models.DateField(validators=[neurodivergentes.models.base.validate_future_date], verbose_name='Data de Nascimento')),
                ('vinculo', models.CharField(choices=[('pai_mae', 'Pai/Mãe'), ('filho', 'Filho(a)'), ('irmao', 'Irmão(ã)'), ('avo', 'Avô/Avó'), ('tio', 'Tio(a)'), ('sobrinho', 'Sobrinho(a)'), ('primo', 'Primo(a)'), ('conjuge', 'Cônjuge'), ('companheiro', 'Companheiro(a)'), ('padrasto', 'Padrasto/Madrasta'), ('enteado', 'Enteado(a)'), ('cunhado', 'Cunhado(a)'), ('genro', 'Genro/Nora'), ('sogro', 'Sogro(a)'), ('tutor', 'Tutor(a)'), ('cuidador', 'Cuidador(a)'), ('outro', 'Outro')], max_length=20, verbose_name='Vínculo/Parentesco')),
                ('outro_vinculo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Especificar outro vínculo')),
                ('ocupacao', models.CharField(max_length=100, verbose_name='Ocupação')),
                ('neurodivergente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grupo_familiar', to='neurodivergentes.neurodivergente')),
            ],
            options={
                'verbose_name': 'Membro do Grupo Familiar',
                'verbose_name_plural': 'Grupo Familiar',
                'ordering': ['neurodivergente', 'primeiro_nome'],
            },
        ),
        migrations.CreateModel(
            name='ParecerAvaliativo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_avaliacao', models.DateField(verbose_name='Data da Avaliação')),
                ('evolucao', models.TextField(verbose_name='Descrição da Evolução')),
                ('pontos_fortes', models.TextField(verbose_name='Pontos Fortes Observados')),
                ('desafios', models.TextField(verbose_name='Desafios Identificados')),
                ('recomendacoes', models.TextField(verbose_name='Recomendações')),
                ('conclusoes', models.TextField(verbose_name='Conclusões')),
                ('anexos', models.FileField(blank=True, null=True, upload_to='neurodivergentes/pareceres/', verbose_name='Anexos')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('escola', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pareceres', to='escola.escola')),
                ('neurodivergente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pareceres', to='neurodivergentes.neurodivergente')),
            ],
            options={
                'verbose_name': 'Parecer',
                'verbose_name_plural': 'Pareceres',
                'ordering': ['-data_avaliacao'],
            },
        ),
        migrations.CreateModel(
            name='PDI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_criacao', models.DateField(verbose_name='Data do PDI')),
                ('status', models.CharField(choices=[('iniciado', 'Iniciado'), ('em_andamento', 'Em Andamento'), ('concluido', 'Concluído'), ('suspenso', 'Suspenso'), ('cancelado', 'Cancelado')], default='iniciado', max_length=20, verbose_name='Status')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Diário de Classe')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('neurodivergente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdis', to='neurodivergentes.neurodivergente', verbose_name='Aluno/Paciente')),
                ('pedagogo_responsavel', models.ForeignKey(limit_choices_to={'profissao__in': ['educador_especial', 'pedagogo', 'psicopedagogo', 'neuropsicopedagogo']}, on_delete=django.db.models.deletion.PROTECT, related_name='pdis_responsavel', to='profissionais_app.profissional', verbose_name='Pedagogo Responsável')),
            ],
            options={
                'verbose_name': 'PDI',
                'verbose_name_plural': 'PDIs',
                'ordering': ['-data_criacao'],
            },
        ),
        migrations.CreateModel(
            name='PlanoEducacional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Finalização')),
                ('objetivos', models.TextField(verbose_name='Objetivos')),
                ('estrategias', models.TextField(verbose_name='Estratégias')),
                ('recursos', models.TextField(verbose_name='Recursos Necessários')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pdi', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='plano_educacional', to='neurodivergentes.pdi', verbose_name='PDI')),
                ('pedagogo_responsavel', models.ForeignKey(limit_choices_to={'profissao__startswith': 'pedagogo'}, on_delete=django.db.models.deletion.PROTECT, related_name='planos_educacionais', to='profissionais_app.profissional')),
            ],
            options={
                'verbose_name': 'ACI',
                'verbose_name_plural': 'ACIs',
            },
        ),
        migrations.CreateModel(
            name='AdaptacaoCurricular',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_inicio', models.DateField(verbose_name='Data de Início')),
                ('data_fim', models.DateField(verbose_name='Data de Finalização')),
                ('componente_curricular', models.CharField(max_length=100, verbose_name='Componente Curricular')),
                ('conteudo_adaptado', models.TextField(verbose_name='Conteúdo Adaptado')),
                ('estrategias', models.TextField(verbose_name='Estratégias de Ensino')),
                ('recursos', models.TextField(verbose_name='Recursos Didáticos')),
                ('avaliacao', models.TextField(verbose_name='Processo Avaliativo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('professor_responsavel', models.ForeignKey(limit_choices_to={'profissao__startswith': 'educador_especial'}, on_delete=django.db.models.deletion.PROTECT, related_name='adaptacoes_curriculares', to='profissionais_app.profissional')),
                ('plano_educacional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adaptacoes', to='neurodivergentes.planoeducacional')),
            ],
            options={
                'verbose_name': 'Adaptação Curricular',
                'verbose_name_plural': 'Adaptações Curriculares',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='RegistroEvolucao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data')),
                ('descricao', models.TextField(verbose_name='Descrição da Evolução')),
                ('anexos', models.FileField(blank=True, null=True, upload_to='neurodivergentes/evolucao/', verbose_name='Anexos')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('neurodivergente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_evolucao', to='neurodivergentes.neurodivergente')),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='registros_evolucao', to='profissionais_app.profissional')),
            ],
            options={
                'verbose_name': 'Evolução',
                'verbose_name_plural': 'Evolução',
                'ordering': ['-data', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RotinaAtividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horario', models.TimeField(verbose_name='Horário')),
                ('atividade', models.CharField(max_length=200, verbose_name='Atividade')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('anamnese', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rotinas', to='neurodivergentes.anamnese')),
            ],
            options={
                'verbose_name': 'Atividade da Rotina',
                'verbose_name_plural': 'Atividades da Rotina',
                'ordering': ['horario'],
            },
        ),
        migrations.CreateModel(
            name='HistoricoEscolar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serie_atual', models.CharField(choices=[('bercario1', 'Berçário I'), ('bercario2', 'Berçário II'), ('maternal', 'Maternal'), ('jardim', 'Jardim'), ('pre1', 'Pré I'), ('pre2', 'Pré II'), ('1ano', '1º Ano'), ('2ano', '2º Ano'), ('3ano', '3º Ano'), ('4ano', '4º Ano'), ('5ano', '5º Ano'), ('6ano', '6º Ano'), ('7ano', '7º Ano'), ('8ano', '8º Ano'), ('9ano', '9º Ano')], max_length=10, verbose_name='Série/Ano Atual')),
                ('modalidade_ensino', models.CharField(choices=[('regular', 'Ensino Regular'), ('especial', 'Ensino Especial'), ('inclusivo', 'Inclusivo')], max_length=10, verbose_name='Modalidade de Ensino')),
                ('adaptacoes_curriculares', models.TextField(blank=True, verbose_name='Adaptações Curriculares Necessárias')),
                ('necessidades_especificas', models.TextField(blank=True, verbose_name='Necessidades Educacionais Específicas')),
                ('historico_documento', models.FileField(blank=True, null=True, upload_to='neurodivergentes/historicos/', verbose_name='Histórico Escolar')),
                ('relatorios_pedagogicos', models.FileField(blank=True, null=True, upload_to='neurodivergentes/relatorios/', verbose_name='Relatórios Pedagógicos')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('escola_atual', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='alunos_neurodivergentes', to='escola.escola')),
                ('neurodivergente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='historico_escolar', to='neurodivergentes.neurodivergente')),
                ('series_cursadas', models.ManyToManyField(blank=True, help_text='Selecione todas as séries já cursadas na rede municipal', related_name='historicos', to='neurodivergentes.seriescursadas', verbose_name='Séries Cursadas')),
            ],
            options={
                'verbose_name': 'Histórico Escolar',
                'verbose_name_plural': 'Históricos Escolares',
            },
        ),
        migrations.CreateModel(
            name='DiagnosticoNeurodivergente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_identificacao', models.DateField(verbose_name='Data de Identificação')),
                ('observacoes', models.TextField(blank=True, verbose_name='Observações')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='diagnosticos', to='neurodivergentes.categorianeurodivergente')),
                ('condicao', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='diagnosticos', to='neurodivergentes.condicaoneurodivergente')),
                ('neurodivergencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='diagnosticos', to='neurodivergentes.neurodivergencia')),
            ],
            options={
                'verbose_name': 'Diagnóstico',
                'verbose_name_plural': 'Diagnósticos',
                'ordering': ['data_identificacao'],
                'unique_together': {('neurodivergencia', 'condicao')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='monitoramento',
            unique_together={('neurodivergente', 'mes', 'ano')},
        ),
        migrations.CreateModel(
            name='PDIMetaHabilidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progresso', models.IntegerField(choices=[(0, '0%'), (10, '10%'), (20, '20%'), (30, '30%'), (40, '40%'), (50, '50%'), (60, '60%'), (70, '70%'), (80, '80%'), (90, '90%'), (100, '100%')], default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Progresso (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_habilidade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='neurodivergentes.metahabilidade', verbose_name='Meta/Habilidade')),
                ('pdi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metas_habilidades', to='neurodivergentes.pdi')),
            ],
            options={
                'verbose_name': 'Meta/Habilidade',
                'verbose_name_plural': 'Metas/Habilidades',
                'ordering': ['-created_at'],
                'unique_together': {('pdi', 'meta_habilidade')},
            },
        ),
    ]
